<?php

namespace App\__project__\__version__\Middleware;

use Store\Contracts\HandleTraitContract;

use Store\Services\Validator;

class Validation implements HandleTraitContract {

    /**
     * @return void
     */
    public function handle() {

        //check page on query
        $this->checkPageOnQuery();

        //check globally email
        $this->checkValidForPost(['email','creditCard']);
    }

    /**
     * @return bool
     */
    private function checkPageOnQuery(){

        //get page on query
        $page=get('page');

        //check page on query for filter
        //throw exception as invalid argument
        if($page!==null && !is_numeric($page)){
            throw new \InvalidArgumentException('page variable that on query is not numeric');
        }

        return true;
    }

    /**
     * @param $query
     * @return bool
     */
    private function checkValidForPost($query){

        //where we are checking the $query data
        //that comes with the post data globally.
        if(!is_array($query)){
            $this->checkPostQuery($query);
        }
        else{
            foreach($query as $data){
                $this->checkPostQuery($data);
            }
        }

        return true;
    }

    /**
     * @param null $data
     */
    private function checkPostQuery($data=null){

        // query control is made
        // for the validator class.
        if(post($data)!==null){
            Validator::$data(post($data));
        }
    }
}
